accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
accu_resp2 <- left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# Setting accuracy
ridge_t <- df_long$landform == "r" & (df_long$respond == "4" | df_long$respond == "5")
ridge_f <- df_long$landform == "r" & (df_long$respond == "1" | df_long$respond == "2")
valley_t <- df_long$landform == "v" & (df_long$respond == "1" | df_long$respond == "2")
valley_f <- df_long$landform == "v" & (df_long$respond == "4" | df_long$respond == "5")
df_long$accuracy <- ifelse(ridge_t | valley_t , "yes", "no")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100, 1)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100, 1)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100, 1)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
accu_resp <- left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# Setting accuracy
ridge_t <- df_long$landform == "r" & (df_long$respond == "4" | df_long$respond == "5")
ridge_f <- df_long$landform == "r" & (df_long$respond == "1" | df_long$respond == "2")
valley_t <- df_long$landform == "v" & (df_long$respond == "1" | df_long$respond == "2")
valley_f <- df_long$landform == "v" & (df_long$respond == "4" | df_long$respond == "5")
df_long$accuracy <- ifelse(ridge_t | valley_t , "yes", "no")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100, 1)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100, 1)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100, 1)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
# accu_resp <- left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# accu_resp
accu_resp <- class(rbind(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a))
accu_resp
# df_long %>%
#   filter(accuracy == "yes") %>%
#   group_by(ds_owner, id) %>%
#   summarise(N = n()) %>%
#   mutate(accu_count = N,
#          accu_pct = round(N / 40 * 100, 1))
#accu_j <- df_long %>%
#   filter(ds_owner == "j",
#          accuracy == "yes") %>%
#   select(ds_owner, id, landform, land_dir, light_dir, respond, accuracy) %>%
#   group_by(id) %>%
#   summarise(N = n()) %>%
#   mutate(pct = round(N / 40 * 100, 1))
# accu_j
# Setting accuracy score
# df_long$accuracy_score <- ifelse(df_long$respond == "1" | df_long$respond == "5", 1, 0)
#
# # Setting confidence (out of 40)
df_long$confidence <- "NA"
df_long$confidence[df_long$respond == "1" | df_long$respond == "5"] <- "high_confidence"
df_long$confidence[df_long$respond == "2" | df_long$respond == "4"] <- "low_confidence"
df_long$confidence[df_long$respond == "3"] <- "ambiguous"
#
# # Setting confidence score (out of 80)
# df_long$confidence_score[df_long$respond == "1" | df_long$respond == "5"] <- 2
# df_long$confidence_score[df_long$respond == "2" | df_long$respond == "4"] <- 1
# df_long$confidence_score[df_long$respond == "3"] <- 0
str(accu_resp)
class(accu_resp)
# Setting accuracy
ridge_t <- df_long$landform == "r" & (df_long$respond == "4" | df_long$respond == "5")
ridge_f <- df_long$landform == "r" & (df_long$respond == "1" | df_long$respond == "2")
valley_t <- df_long$landform == "v" & (df_long$respond == "1" | df_long$respond == "2")
valley_f <- df_long$landform == "v" & (df_long$respond == "4" | df_long$respond == "5")
df_long$accuracy <- ifelse(ridge_t | valley_t , "yes", "no")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100, 1)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100, 1)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100, 1)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
# accu_resp <- left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# accu_resp
accu_resp <- rbind(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a)
accu_resp
# df_long %>%
#   filter(accuracy == "yes") %>%
#   group_by(ds_owner, id) %>%
#   summarise(N = n()) %>%
#   mutate(accu_count = N,
#          accu_pct = round(N / 40 * 100, 1))
#accu_j <- df_long %>%
#   filter(ds_owner == "j",
#          accuracy == "yes") %>%
#   select(ds_owner, id, landform, land_dir, light_dir, respond, accuracy) %>%
#   group_by(id) %>%
#   summarise(N = n()) %>%
#   mutate(pct = round(N / 40 * 100, 1))
# accu_j
# Setting accuracy score
# df_long$accuracy_score <- ifelse(df_long$respond == "1" | df_long$respond == "5", 1, 0)
#
# # Setting confidence (out of 40)
df_long$confidence <- "NA"
df_long$confidence[df_long$respond == "1" | df_long$respond == "5"] <- "high_confidence"
df_long$confidence[df_long$respond == "2" | df_long$respond == "4"] <- "low_confidence"
df_long$confidence[df_long$respond == "3"] <- "ambiguous"
#
# # Setting confidence score (out of 80)
# df_long$confidence_score[df_long$respond == "1" | df_long$respond == "5"] <- 2
# df_long$confidence_score[df_long$respond == "2" | df_long$respond == "4"] <- 1
# df_long$confidence_score[df_long$respond == "3"] <- 0
# Setting accuracy
ridge_t <- df_long$landform == "r" & (df_long$respond == "4" | df_long$respond == "5")
ridge_f <- df_long$landform == "r" & (df_long$respond == "1" | df_long$respond == "2")
valley_t <- df_long$landform == "v" & (df_long$respond == "1" | df_long$respond == "2")
valley_f <- df_long$landform == "v" & (df_long$respond == "4" | df_long$respond == "5")
df_long$accuracy <- ifelse(ridge_t | valley_t , "yes", "no")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100, 1)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100, 1)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100, 1)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
# accu_resp <- left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# accu_resp
accu_resp <- rbind(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a) %>%
select(-1, dplyr::everything())
accu_resp
# df_long %>%
#   filter(accuracy == "yes") %>%
#   group_by(ds_owner, id) %>%
#   summarise(N = n()) %>%
#   mutate(accu_count = N,
#          accu_pct = round(N / 40 * 100, 1))
#accu_j <- df_long %>%
#   filter(ds_owner == "j",
#          accuracy == "yes") %>%
#   select(ds_owner, id, landform, land_dir, light_dir, respond, accuracy) %>%
#   group_by(id) %>%
#   summarise(N = n()) %>%
#   mutate(pct = round(N / 40 * 100, 1))
# accu_j
# Setting accuracy score
# df_long$accuracy_score <- ifelse(df_long$respond == "1" | df_long$respond == "5", 1, 0)
#
# # Setting confidence (out of 40)
df_long$confidence <- "NA"
df_long$confidence[df_long$respond == "1" | df_long$respond == "5"] <- "high_confidence"
df_long$confidence[df_long$respond == "2" | df_long$respond == "4"] <- "low_confidence"
df_long$confidence[df_long$respond == "3"] <- "ambiguous"
#
# # Setting confidence score (out of 80)
# df_long$confidence_score[df_long$respond == "1" | df_long$respond == "5"] <- 2
# df_long$confidence_score[df_long$respond == "2" | df_long$respond == "4"] <- 1
# df_long$confidence_score[df_long$respond == "3"] <- 0
names(accu_resp)
# Setting accuracy
ridge_t <- df_long$landform == "r" & (df_long$respond == "4" | df_long$respond == "5")
ridge_f <- df_long$landform == "r" & (df_long$respond == "1" | df_long$respond == "2")
valley_t <- df_long$landform == "v" & (df_long$respond == "1" | df_long$respond == "2")
valley_f <- df_long$landform == "v" & (df_long$respond == "4" | df_long$respond == "5")
df_long$accuracy <- ifelse(ridge_t | valley_t , "yes", "no")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100, 1)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100, 1)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100, 1)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
# accu_resp <- left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# accu_resp
accu_resp <- rbind(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a) %>%
select(!1, dplyr::everything())
accu_resp
# df_long %>%
#   filter(accuracy == "yes") %>%
#   group_by(ds_owner, id) %>%
#   summarise(N = n()) %>%
#   mutate(accu_count = N,
#          accu_pct = round(N / 40 * 100, 1))
#accu_j <- df_long %>%
#   filter(ds_owner == "j",
#          accuracy == "yes") %>%
#   select(ds_owner, id, landform, land_dir, light_dir, respond, accuracy) %>%
#   group_by(id) %>%
#   summarise(N = n()) %>%
#   mutate(pct = round(N / 40 * 100, 1))
# accu_j
# Setting accuracy score
# df_long$accuracy_score <- ifelse(df_long$respond == "1" | df_long$respond == "5", 1, 0)
#
# # Setting confidence (out of 40)
df_long$confidence <- "NA"
df_long$confidence[df_long$respond == "1" | df_long$respond == "5"] <- "high_confidence"
df_long$confidence[df_long$respond == "2" | df_long$respond == "4"] <- "low_confidence"
df_long$confidence[df_long$respond == "3"] <- "ambiguous"
#
# # Setting confidence score (out of 80)
# df_long$confidence_score[df_long$respond == "1" | df_long$respond == "5"] <- 2
# df_long$confidence_score[df_long$respond == "2" | df_long$respond == "4"] <- 1
# df_long$confidence_score[df_long$respond == "3"] <- 0
# Setting accuracy
ridge_t <- df_long$landform == "r" & (df_long$respond == "4" | df_long$respond == "5")
ridge_f <- df_long$landform == "r" & (df_long$respond == "1" | df_long$respond == "2")
valley_t <- df_long$landform == "v" & (df_long$respond == "1" | df_long$respond == "2")
valley_f <- df_long$landform == "v" & (df_long$respond == "4" | df_long$respond == "5")
df_long$accuracy <- ifelse(ridge_t | valley_t , "yes", "no")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100, 1)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100, 1)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100, 1)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
# accu_resp <- left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# accu_resp
accu_resp <- rbind(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a)
accu_resp
# df_long %>%
#   filter(accuracy == "yes") %>%
#   group_by(ds_owner, id) %>%
#   summarise(N = n()) %>%
#   mutate(accu_count = N,
#          accu_pct = round(N / 40 * 100, 1))
#accu_j <- df_long %>%
#   filter(ds_owner == "j",
#          accuracy == "yes") %>%
#   select(ds_owner, id, landform, land_dir, light_dir, respond, accuracy) %>%
#   group_by(id) %>%
#   summarise(N = n()) %>%
#   mutate(pct = round(N / 40 * 100, 1))
# accu_j
# Setting accuracy score
# df_long$accuracy_score <- ifelse(df_long$respond == "1" | df_long$respond == "5", 1, 0)
#
# # Setting confidence (out of 40)
df_long$confidence <- "NA"
df_long$confidence[df_long$respond == "1" | df_long$respond == "5"] <- "high_confidence"
df_long$confidence[df_long$respond == "2" | df_long$respond == "4"] <- "low_confidence"
df_long$confidence[df_long$respond == "3"] <- "ambiguous"
#
# # Setting confidence score (out of 80)
# df_long$confidence_score[df_long$respond == "1" | df_long$respond == "5"] <- 2
# df_long$confidence_score[df_long$respond == "2" | df_long$respond == "4"] <- 1
# df_long$confidence_score[df_long$respond == "3"] <- 0
# Setting accuracy
ridge_t <- df_long$landform == "r" & (df_long$respond == "4" | df_long$respond == "5")
ridge_f <- df_long$landform == "r" & (df_long$respond == "1" | df_long$respond == "2")
valley_t <- df_long$landform == "v" & (df_long$respond == "1" | df_long$respond == "2")
valley_f <- df_long$landform == "v" & (df_long$respond == "4" | df_long$respond == "5")
df_long$accuracy <- ifelse(ridge_t | valley_t , "yes", "no")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100, 1)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100, 1)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100, 1)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# Setting accuracy
ridge_t <- df_long$landform == "r" & (df_long$respond == "4" | df_long$respond == "5")
ridge_f <- df_long$landform == "r" & (df_long$respond == "1" | df_long$respond == "2")
valley_t <- df_long$landform == "v" & (df_long$respond == "1" | df_long$respond == "2")
valley_f <- df_long$landform == "v" & (df_long$respond == "4" | df_long$respond == "5")
df_long$accuracy <- ifelse(ridge_t | valley_t , "yes", "no")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100, 1)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100, 1)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100, 1)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100, 1)
# accu_resp <- left_join(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a, by = "ds_owner")
# accu_resp
accu_resp <- rbind(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a)
accu_resp
# df_long %>%
#   filter(accuracy == "yes") %>%
#   group_by(ds_owner, id) %>%
#   summarise(N = n()) %>%
#   mutate(accu_count = N,
#          accu_pct = round(N / 40 * 100, 1))
#accu_j <- df_long %>%
#   filter(ds_owner == "j",
#          accuracy == "yes") %>%
#   select(ds_owner, id, landform, land_dir, light_dir, respond, accuracy) %>%
#   group_by(id) %>%
#   summarise(N = n()) %>%
#   mutate(pct = round(N / 40 * 100, 1))
# accu_j
# Setting accuracy score
# df_long$accuracy_score <- ifelse(df_long$respond == "1" | df_long$respond == "5", 1, 0)
#
# # Setting confidence (out of 40)
df_long$confidence <- "NA"
df_long$confidence[df_long$respond == "1" | df_long$respond == "5"] <- "high_confidence"
df_long$confidence[df_long$respond == "2" | df_long$respond == "4"] <- "low_confidence"
df_long$confidence[df_long$respond == "3"] <- "ambiguous"
#
# # Setting confidence score (out of 80)
# df_long$confidence_score[df_long$respond == "1" | df_long$respond == "5"] <- 2
# df_long$confidence_score[df_long$respond == "2" | df_long$respond == "4"] <- 1
# df_long$confidence_score[df_long$respond == "3"] <- 0
