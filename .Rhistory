#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Gender",
#          title = "Mean accuracy per gender (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
#
# # Accuracy per handedness
# accu_hand <- df_long %>%
#   group_by(handedness, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(handedness, accuracy,pct)
#
# accu_hand <- within(accu_hand, accuracy <- factor(accuracy, levels = c("yes", "no")))
# accu_hand <- within(accu_hand, handedness <- factor(handedness, levels = c("b", "r", "l")))
# accu_hand$handedness <- ordered(accu_hand$handedness, levels = c("r", "l", "b"))
#
# p <- ggplot(accu_hand, aes(x = accuracy, y = pct, fill = handedness, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2", labels = c("right-handed", "left-handed", "ambidextrous")) +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Handedness",
#          title = "Mean accuracy per handedness (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
#
# # Accuracy per expertise
# accu_exp <- df_long %>%
#   group_by(expertise, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(expertise, accuracy,pct)
#
# accu_exp <- within(accu_exp, accuracy <- factor(accuracy, levels = c("yes", "no")))
# accu_exp <- within(accu_exp, expertise <- factor(expertise, levels = c("some_experience", "no_experience")))
#
# p <- ggplot(accu_exp, aes(x = accuracy, y = pct, fill = expertise, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2", labels = c("some experience", "no experience")) +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Expertise",
#          title = "Mean accuracy per expertise (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100)
accu_resp <- rbind(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a)
# Calculating accuracy mean per light direction
accu_resp_north <- accu_resp %>%
group_by(ds_owner, light_dir) %>%
summarise(mean = mean(accu_pct))
# Calculating accuracy mean per light direction and hemisphere
accu_resp_n_hem <- accu_resp_north %>%
filter(ds_owner == "j" | ds_owner == "g") %>%
group_by(light_dir) %>%
summarise(mean_n = mean(mean))
accu_resp_s_hem <- accu_resp_north %>%
filter(ds_owner == "v" | ds_owner == "a") %>%
group_by(light_dir) %>%
summarise(mean_s = mean(mean))
accu_resp_hem <- left_join(accu_resp_n_hem, accu_resp_s_hem, by = "light_dir")
# Calculating accuracy per participant and handedness
accu_hand_l <- df_long %>%
filter(accuracy == "yes",
handedness == "l") %>%
group_by(ds_owner, id, handedness) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, handedness, accu_count, accu_pct)
accu_hand_r <- df_long %>%
filter(accuracy == "yes",
handedness == "r") %>%
group_by(ds_owner, id, handedness) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, handedness, accu_count, accu_pct)
# Calculating accuracy per participant, handedness and respond
accu_resp_hand_l <- df_long %>%
filter(accuracy == "yes",
handedness == "l" | handedness == "b") %>%
group_by(landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_left = accu_count / 34 * 100) %>%
ungroup() %>%
select(landform, land_dir, light_dir, accu_left)
accu_resp_hand_r <- df_long %>%
filter(accuracy == "yes",
handedness == "r") %>%
group_by(landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_right = accu_count / 156 * 100) %>%
ungroup() %>%
select(landform, land_dir, light_dir, accu_right)
accu_resp_hand <-  accu_resp_hand_l %>% left_join(accu_resp_hand_r)
# Calculating accuracy per handedness and respond (northern light direction)
accu_hand_l_north<- accu_resp_hand %>%
group_by(light_dir) %>%
summarise(mean = mean(accu_left))
accu_hand_l_north
accu_hand_r_north<- accu_resp_hand %>%
group_by(light_dir) %>%
summarise(mean = mean(accu_right))
accu_hand_r_north
# df_long %>%
#   filter(accuracy == "yes") %>%
#   group_by(ds_owner, id) %>%
#   summarise(N = n()) %>%
#   mutate(accu_count = N,
#          accu_pct = round(N / 40 * 100, 1))
#accu_j <- df_long %>%
#   filter(ds_owner == "j",
#          accuracy == "yes") %>%
#   select(ds_owner, id, landform, land_dir, light_dir, respond, accuracy) %>%
#   group_by(id) %>%
#   summarise(N = n()) %>%
#   mutate(pct = round(N / 40 * 100, 1))
# accu_j
# Setting accuracy score
# df_long$accuracy_score <- ifelse(df_long$respond == "1" | df_long$respond == "5", 1, 0)
#
#
# # Setting confidence score (out of 80)
# df_long$confidence_score[df_long$respond == "1" | df_long$respond == "5"] <- 2
# df_long$confidence_score[df_long$respond == "2" | df_long$respond == "4"] <- 1
# df_long$confidence_score[df_long$respond == "3"] <- 0
# Accuracy per ds_owner
# Accuracy per hemisphere
# accu_hem <- df_long %>%
#   group_by(hemisphere, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(accuracy, hemisphere, pct)
#
# p <- ggplot(accu_hem, aes(x = reorder(accuracy, -pct), y = pct, fill = hemisphere, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2") +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Hemisphere",
#          title = "Mean accuracy per hemisphere (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
# Accuracy per hemisphere and light direction
# accu_hem_degrees <- df_long %>%
#   group_by(hemisphere, accuracy, light_dir) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(accuracy, light_dir, pct)
#
# accu_hem_degrees <- within(accu_hem_degrees, light_dir <- factor(light_dir, levels = c("0", "337.5", "315", "292.5", "270")))
# accu_hem_degrees <- within(accu_hem_degrees, accuracy <- factor(accuracy, levels = c("yes", "no")))
# accu_hem_degrees$light_dir <- ordered(accu_hem_degrees$light_dir, levels = c("0", "337.5", "315", "292.5", "270")) # Converting degrees to ordered factors
# p <- ggplot(accu_hem_degrees, aes(x = light_dir, y = pct, fill = hemisphere, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#   scale_fill_brewer(type = "qual", palette = "Dark2") +
#   labs(x = "Light Direction (degrees)", y = "Mean Accuracy",
#      fill = "Hemisphere",
#      title = "Mean accuracy per hemisphere and light direction (%)") +
#   scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#   geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), hjust = -0.20, size = rel(3)) +
#   facet_grid(~ accuracy, labeller = labeller(accuracy = c(`no` = "Inverse", `yes` = "Correct"))) +
#   coord_flip() +
#   theme(legend.position = "bottom")
#
# accu_hem_degrees_inverse <- df_long %>%
#   group_by(hemisphere, accuracy, light_dir) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   filter(accuracy == "no") %>%
#   select(accuracy, light_dir, pct)
#
# accu_hem_degrees_inverse %>%
#   treemap::treemap(
#         index = c("hemisphere", "light_dir"),
#         vSize = "pct",
#         title = "Terrain inversal effect per hemisphere and light direction",
#         fontsize.title = 12
#         )
#
# # Accuracy per gender
# accu_gender <- df_long %>%
#   group_by(gender, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(gender, accuracy,pct)
#
# accu_gender <- within(accu_gender, accuracy <- factor(accuracy, levels = c("yes", "no")))
#
# p <- ggplot(accu_gender, aes(x = accuracy, y = pct, fill = gender, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2", labels = c("female", "male")) +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Gender",
#          title = "Mean accuracy per gender (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
#
# # Accuracy per handedness
# accu_hand <- df_long %>%
#   group_by(handedness, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(handedness, accuracy,pct)
#
# accu_hand <- within(accu_hand, accuracy <- factor(accuracy, levels = c("yes", "no")))
# accu_hand <- within(accu_hand, handedness <- factor(handedness, levels = c("b", "r", "l")))
# accu_hand$handedness <- ordered(accu_hand$handedness, levels = c("r", "l", "b"))
#
# p <- ggplot(accu_hand, aes(x = accuracy, y = pct, fill = handedness, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2", labels = c("right-handed", "left-handed", "ambidextrous")) +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Handedness",
#          title = "Mean accuracy per handedness (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
#
# # Accuracy per expertise
# accu_exp <- df_long %>%
#   group_by(expertise, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(expertise, accuracy,pct)
#
# accu_exp <- within(accu_exp, accuracy <- factor(accuracy, levels = c("yes", "no")))
# accu_exp <- within(accu_exp, expertise <- factor(expertise, levels = c("some_experience", "no_experience")))
#
# p <- ggplot(accu_exp, aes(x = accuracy, y = pct, fill = expertise, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2", labels = c("some experience", "no experience")) +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Expertise",
#          title = "Mean accuracy per expertise (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
# Calculating accuracy per participant
accu_part <- df_long %>%
filter(accuracy == "yes") %>%
group_by(ds_owner, id) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, accu_count, accu_pct)
# Calculating accuracy per respond
accu_resp_j <- df_long %>%
filter(accuracy == "yes",
ds_owner == "j") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 27 * 100)
accu_resp_g <- df_long %>%
filter(accuracy == "yes",
ds_owner == "g") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 35 * 100)
accu_resp_v <- df_long %>%
filter(accuracy == "yes",
ds_owner == "v") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 87 * 100)
accu_resp_a <- df_long %>%
filter(accuracy == "yes",
ds_owner == "a") %>%
group_by(ds_owner, landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_pct = accu_count / 41 * 100)
accu_resp <- rbind(accu_resp_j, accu_resp_g, accu_resp_v, accu_resp_a)
# Calculating accuracy mean per light direction
accu_resp_north <- accu_resp %>%
group_by(ds_owner, light_dir) %>%
summarise(mean = mean(accu_pct))
# Calculating accuracy mean per light direction and hemisphere
accu_resp_n_hem <- accu_resp_north %>%
filter(ds_owner == "j" | ds_owner == "g") %>%
group_by(light_dir) %>%
summarise(mean_n = mean(mean))
accu_resp_s_hem <- accu_resp_north %>%
filter(ds_owner == "v" | ds_owner == "a") %>%
group_by(light_dir) %>%
summarise(mean_s = mean(mean))
accu_resp_hem <- left_join(accu_resp_n_hem, accu_resp_s_hem, by = "light_dir")
# Calculating accuracy per participant and handedness
accu_hand_l <- df_long %>%
filter(accuracy == "yes",
handedness == "l") %>%
group_by(ds_owner, id, handedness) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, handedness, accu_count, accu_pct)
accu_hand_r <- df_long %>%
filter(accuracy == "yes",
handedness == "r") %>%
group_by(ds_owner, id, handedness) %>%
mutate(accu_count = n(),
accu_pct = round(accu_count / 40 * 100, 1)) %>%
ungroup() %>%
select(ds_owner, id, handedness, accu_count, accu_pct)
# Calculating accuracy per participant, handedness and respond
accu_resp_hand_l <- df_long %>%
filter(accuracy == "yes",
handedness == "l" | handedness == "b") %>%
group_by(landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_left = accu_count / 34 * 100) %>%
ungroup() %>%
select(landform, land_dir, light_dir, accu_left)
accu_resp_hand_r <- df_long %>%
filter(accuracy == "yes",
handedness == "r") %>%
group_by(landform, land_dir, light_dir) %>%
summarise(accu_count = n()) %>%
mutate(accu_right = accu_count / 156 * 100) %>%
ungroup() %>%
select(landform, land_dir, light_dir, accu_right)
accu_resp_hand <-  accu_resp_hand_l %>% left_join(accu_resp_hand_r)
# Calculating accuracy per handedness and respond (northern light direction)
accu_hand_l_north<- accu_resp_hand %>%
group_by(light_dir) %>%
summarise(mean_left = mean(accu_left))
accu_hand_r_north<- accu_resp_hand %>%
group_by(light_dir) %>%
summarise(mean_right = mean(accu_right))
accu_hand_north <- accu_hand_l_north %>% left_join(accu_hand_r_north)
accu_hand_north
# df_long %>%
#   filter(accuracy == "yes") %>%
#   group_by(ds_owner, id) %>%
#   summarise(N = n()) %>%
#   mutate(accu_count = N,
#          accu_pct = round(N / 40 * 100, 1))
#accu_j <- df_long %>%
#   filter(ds_owner == "j",
#          accuracy == "yes") %>%
#   select(ds_owner, id, landform, land_dir, light_dir, respond, accuracy) %>%
#   group_by(id) %>%
#   summarise(N = n()) %>%
#   mutate(pct = round(N / 40 * 100, 1))
# accu_j
# Setting accuracy score
# df_long$accuracy_score <- ifelse(df_long$respond == "1" | df_long$respond == "5", 1, 0)
#
#
# # Setting confidence score (out of 80)
# df_long$confidence_score[df_long$respond == "1" | df_long$respond == "5"] <- 2
# df_long$confidence_score[df_long$respond == "2" | df_long$respond == "4"] <- 1
# df_long$confidence_score[df_long$respond == "3"] <- 0
# Accuracy per ds_owner
# Accuracy per hemisphere
# accu_hem <- df_long %>%
#   group_by(hemisphere, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(accuracy, hemisphere, pct)
#
# p <- ggplot(accu_hem, aes(x = reorder(accuracy, -pct), y = pct, fill = hemisphere, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2") +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Hemisphere",
#          title = "Mean accuracy per hemisphere (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
# Accuracy per hemisphere and light direction
# accu_hem_degrees <- df_long %>%
#   group_by(hemisphere, accuracy, light_dir) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(accuracy, light_dir, pct)
#
# accu_hem_degrees <- within(accu_hem_degrees, light_dir <- factor(light_dir, levels = c("0", "337.5", "315", "292.5", "270")))
# accu_hem_degrees <- within(accu_hem_degrees, accuracy <- factor(accuracy, levels = c("yes", "no")))
# accu_hem_degrees$light_dir <- ordered(accu_hem_degrees$light_dir, levels = c("0", "337.5", "315", "292.5", "270")) # Converting degrees to ordered factors
# p <- ggplot(accu_hem_degrees, aes(x = light_dir, y = pct, fill = hemisphere, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#   scale_fill_brewer(type = "qual", palette = "Dark2") +
#   labs(x = "Light Direction (degrees)", y = "Mean Accuracy",
#      fill = "Hemisphere",
#      title = "Mean accuracy per hemisphere and light direction (%)") +
#   scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#   geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), hjust = -0.20, size = rel(3)) +
#   facet_grid(~ accuracy, labeller = labeller(accuracy = c(`no` = "Inverse", `yes` = "Correct"))) +
#   coord_flip() +
#   theme(legend.position = "bottom")
#
# accu_hem_degrees_inverse <- df_long %>%
#   group_by(hemisphere, accuracy, light_dir) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   filter(accuracy == "no") %>%
#   select(accuracy, light_dir, pct)
#
# accu_hem_degrees_inverse %>%
#   treemap::treemap(
#         index = c("hemisphere", "light_dir"),
#         vSize = "pct",
#         title = "Terrain inversal effect per hemisphere and light direction",
#         fontsize.title = 12
#         )
#
# # Accuracy per gender
# accu_gender <- df_long %>%
#   group_by(gender, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(gender, accuracy,pct)
#
# accu_gender <- within(accu_gender, accuracy <- factor(accuracy, levels = c("yes", "no")))
#
# p <- ggplot(accu_gender, aes(x = accuracy, y = pct, fill = gender, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2", labels = c("female", "male")) +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Gender",
#          title = "Mean accuracy per gender (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
#
# # Accuracy per handedness
# accu_hand <- df_long %>%
#   group_by(handedness, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(handedness, accuracy,pct)
#
# accu_hand <- within(accu_hand, accuracy <- factor(accuracy, levels = c("yes", "no")))
# accu_hand <- within(accu_hand, handedness <- factor(handedness, levels = c("b", "r", "l")))
# accu_hand$handedness <- ordered(accu_hand$handedness, levels = c("r", "l", "b"))
#
# p <- ggplot(accu_hand, aes(x = accuracy, y = pct, fill = handedness, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2", labels = c("right-handed", "left-handed", "ambidextrous")) +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Handedness",
#          title = "Mean accuracy per handedness (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
#
# # Accuracy per expertise
# accu_exp <- df_long %>%
#   group_by(expertise, accuracy) %>%
#   summarize(N = n()) %>%
#   mutate(pct = round(N / sum(N) * 100, 1)) %>%
#   select(expertise, accuracy,pct)
#
# accu_exp <- within(accu_exp, accuracy <- factor(accuracy, levels = c("yes", "no")))
# accu_exp <- within(accu_exp, expertise <- factor(expertise, levels = c("some_experience", "no_experience")))
#
# p <- ggplot(accu_exp, aes(x = accuracy, y = pct, fill = expertise, label = pct))
# p + geom_bar(stat = "identity", position = "dodge2") +
#     scale_fill_brewer(type = "qual", palette = "Dark2", labels = c("some experience", "no experience")) +
#     scale_y_continuous(labels = scales::label_percent(scale = 1)) +
#     scale_x_discrete(labels = c("Correct", "Inverse")) +
#     labs(x = NULL, y = "Mean Accuracy",
#          fill = "Expertise",
#          title = "Mean accuracy per expertise (%)") +
#     geom_text(aes(y = pct, label = pct), position = position_dodge2(width = 1), vjust = -0.40, size = rel(3)) +
#     theme(legend.position = "top")
